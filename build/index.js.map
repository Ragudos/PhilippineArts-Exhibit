{
  "version": 3,
  "sources": ["empty-module:./_components/video.client", "empty-module:./_components/section-of-artworks.client", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/error.tsx", "../app/hooks/useNonce.tsx", "../app/loader.ts", "../app/cookies.server.ts", "../app/config/site.ts", "../app/lib/utils.ts", "../app/components/header.tsx", "../app/components/ui/button.tsx", "../app/components/theme-dropdown.tsx", "../app/components/ui/dropdown.tsx", "../app/hooks/useThemes.tsx", "../app/context-provider.tsx", "../app/scripts/settings.tsx", "../app/scripts/theme.tsx", "../app/routes/color-scheme/route.ts", "../app/routes/_actions/color-scheme.ts", "../app/routes/slideshow/route.tsx", "../app/lib/metadata.ts", "../app/routes/_loaders/root.ts", "../app/routes/slideshow/_components/artwork-details.tsx", "../app/routes/trailer/route.tsx", "../app/routes/_index/route.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "export * from \"@remix-run/dev/server-build\";", "/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { EntryContext } from \"@remix-run/react/dist/entry\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default async function handleRequest(\r\n    request: Request,\r\n    responseStatusCode: number,\r\n    responseHeaders: Headers,\r\n    remixContext: EntryContext,\r\n) {\r\n    const callbackName = isbot(request.headers.get(\"user-agent\"))\r\n        ? \"onAllReady\"\r\n        : \"onShellReady\";\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const { pipe, abort } = renderToPipeableStream(\r\n            <RemixServer\r\n                abortDelay={ABORT_DELAY}\r\n                context={remixContext}\r\n                url={request.url}\r\n            />,\r\n            {\r\n                [callbackName]() {\r\n                    const body = new PassThrough();\r\n\r\n                    responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n                    resolve(\r\n                        new Response(createReadableStreamFromReadable(body), {\r\n                            headers: responseHeaders,\r\n                            status: responseStatusCode,\r\n                        }),\r\n                    );\r\n\r\n                    pipe(body);\r\n                },\r\n                onShellError(error: unknown) {\r\n                    reject(error);\r\n                },\r\n                onError(error: unknown) {\r\n                    responseStatusCode = 500;\r\n                    console.error(error);\r\n                },\r\n            },\r\n        );\r\n\r\n        setTimeout(abort, ABORT_DELAY);\r\n    });\r\n}\r\n", "/* eslint-disable react-refresh/only-export-components */\n\nimport { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\n\nimport globalStyles from \"./styles/globals.css\";\n\nimport { ErrorBoundary } from \"./error\";\nimport { loader } from \"./loader\";\n\nimport { Header } from \"./components/header\";\nimport { ContextProvider } from \"./context-provider\";\nimport { cn, escapeHTML } from \"./lib/utils\";\nimport { SettingsScript } from \"./scripts/settings\";\nimport { ThemeScript } from \"./scripts/theme\";\n\nexport const links: LinksFunction = () => [\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n{ rel: \"stylesheet\", href: globalStyles }];\n\n\nexport default function App() {\n  const { ENV, themes, userSettings } = useLoaderData<typeof loader>();\n\n  return (\n    <html\n      suppressHydrationWarning\n      lang=\"en\"\n      className={cn(\n        themes == \"dark\" || themes == \"light\" ? themes : undefined,\n        userSettings?.iconType ?? \"solid\"\n      )}\n      data-theme={themes ?? \"system\"}>\n      \r\n            <head>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1\" />\n        \r\n                <meta name=\"theme-color\" content=\"hsl(20, 22%, 57%)\" />\r\n                <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href=\"/metadata/apple-touch-icon.png\" />\n        \r\n                <link\n          rel=\"icon\"\n          type=\"image/png\"\n          sizes=\"32x32\"\n          href=\"/metadata/favicon-32x32.png\" />\n        \r\n                <link\n          rel=\"icon\"\n          type=\"image/png\"\n          sizes=\"16x16\"\n          href=\"/metadata/favicon-16x16.png\" />\n        \r\n                <link rel=\"manifest\" href=\"/metadata/site.webmanifest\" />\r\n                <Meta />\r\n                <Links />\r\n                <ThemeScript themes={themes} />\r\n                <SettingsScript userSettings={userSettings} />\r\n                <script\n          dangerouslySetInnerHTML={{\n            __html: `\n                        window.ENV = ${JSON.stringify(ENV)};\n                        window.themes = \"${\n            themes ? escapeHTML(themes) : \"system\"\n            }\"\n                        window.settings = ${JSON.stringify(userSettings)}\n                        `\n          }}\n          defer>\n        </script>\r\n            </head>\r\n            <body>\r\n                <ContextProvider themes={themes}>\r\n                    <Header />\r\n                    <main className=\"container\">\r\n                        <Outlet />\r\n                    </main>\r\n                    <ScrollRestoration />\r\n                    <Scripts />\r\n                    <LiveReload />\r\n                </ContextProvider>\r\n            </body>\r\n        </html>);\n\n}\n\nexport { ErrorBoundary, loader };", "import {\r\n    Links,\r\n    Meta,\r\n    Scripts,\r\n    isRouteErrorResponse,\r\n    useRouteError,\r\n} from \"@remix-run/react\";\r\nimport { useNonce } from \"./hooks/useNonce\";\r\n\r\nexport function ErrorBoundary() {\r\n    const error = useRouteError();\r\n    const nonce = useNonce();\r\n\r\n    return (\r\n        <html>\r\n            <head>\r\n                <title>Oops!</title>\r\n                <meta name=\"robots\" content=\"nofollow noindex\"></meta>\r\n                <Meta />\r\n                <Links />\r\n            </head>\r\n            <body>\r\n                <h1>\r\n                    {isRouteErrorResponse(error)\r\n                        ? `${error.status} ${error.statusText}`\r\n                        : error instanceof Error\r\n                        ? error.message\r\n                        : \"Unknown Error\"}\r\n                </h1>\r\n                <Scripts nonce={nonce} />\r\n            </body>\r\n        </html>\r\n    );\r\n}\r\n", "import React from \"react\";\r\n\r\nexport const NonceCtx = React.createContext(\"\");\r\n\r\nexport function useNonce() {\r\n    return React.useContext(NonceCtx);\r\n}\r\n", "import type { GlobalObjects, Cookies, UserSettings } from \"./types\";\r\nimport { type LoaderFunctionArgs, json } from \"@remix-run/node\";\r\nimport { themePrefs, userSettings } from \"./cookies.server\";\r\n\r\nexport const loader = async ({ request, params }: LoaderFunctionArgs) => {\r\n    const env = process.env.NODE_ENV;\r\n    const cookies = request.headers.get(\"Cookie\");\r\n    const cookie = {\r\n        themes: (await themePrefs.parse(cookies)) || \"system\",\r\n    } as Cookies;\r\n    const userSettinsCookie = ((await userSettings.parse(cookies)) ||\r\n        {}) as UserSettings;\r\n\r\n    return json({\r\n        ENV: {\r\n            NODE_ENV: env,\r\n        },\r\n        themes: cookie?.themes ?? \"system\",\r\n        userSettings: userSettinsCookie,\r\n    }) as unknown as GlobalObjects;\r\n};\r\n", "import { createCookie } from \"@remix-run/node\";\r\n\r\nexport const themePrefs = createCookie(\"themes\", {\r\n    secure: true,\r\n    sameSite: \"strict\",\r\n    path: \"/\",\r\n    maxAge: 60,\r\n});\r\n\r\nexport const userSettings = createCookie(\"user-settings\", {\r\n    secure: true,\r\n    sameSite: \"strict\",\r\n    path: \"/\",\r\n    maxAge: 60,\r\n});\r\n", "export const siteConfig = {\r\n    title: \"Museo\",\r\n    description: \"Ang tahanan ng sining ng mga manlilikhang Pilipino.\",\r\n};\r\n", "import { twMerge } from \"tailwind-merge\";\r\nimport type { Params } from \"@remix-run/react\";\r\nimport { clsx, type ClassValue } from \"clsx\";\r\nimport React from \"react\";\r\n\r\nexport function cn(...classes: ClassValue[]) {\r\n    return twMerge(clsx(...classes));\r\n}\r\n\r\nexport function appendSearchParamsToString(\r\n    url: string | URL,\r\n    params: Params<string>,\r\n) {\r\n    const newURL = new URL(url);\r\n\r\n    for (const [key, value] of Object.entries(params)) {\r\n        if (value) {\r\n            newURL.searchParams.append(key, value);\r\n        }\r\n    }\r\n\r\n    return newURL;\r\n}\r\n\r\nexport function splitDataBy<T>(data: T[], splitBy: number) {\r\n    const newArr: Array<T[]> = [];\r\n\r\n    for (let idx = 0; idx < splitBy; ++idx) {\r\n        const filteredArr = data.filter((_item, itemIdx) => {\r\n            return itemIdx % splitBy == idx;\r\n        });\r\n\r\n        newArr.push(filteredArr);\r\n    }\r\n\r\n    return newArr;\r\n}\r\n\r\nconst htmlEntityMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    \"(\": \"&#40;\",\r\n    \")\": \"&#41;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&apos;\",\r\n    \"/\": \"&#47\",\r\n    \"\\\\\": \"&#92;\",\r\n};\r\n\r\nexport function escapeHTML(str: string) {\r\n    return str.replace(/[&><\"'\\/\\\\]/g, (s) => {\r\n        return `${htmlEntityMap[s as keyof typeof htmlEntityMap]}`;\r\n    });\r\n}\r\n\r\nexport function mergeRefs<T>(\r\n    ...refs: (\r\n        | React.MutableRefObject<T>\r\n        | React.RefCallback<T>\r\n        | React.ForwardedRef<T>\r\n    )[]\r\n) {\r\n    return (node: T) => {\r\n        for (const ref of refs) {\r\n            if (ref) {\r\n                if (typeof ref == \"function\") {\r\n                    ref(node);\r\n                } else {\r\n                    ref.current = node;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n", "import { siteConfig } from \"@/config/site\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport { buttonVariants } from \"./ui/button\";\r\nimport { ThemeDropdown } from \"./theme-dropdown\";\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <header className=\"sticky px-4 top-0 z-40 border-b-[1px] border-transparent border-b-border bg-background\">\r\n            <div className=\"container p-4 flex justify-between gap-4 items-end\">\r\n                <Link\r\n                    to=\"/\"\r\n                    aria-label={`${siteConfig.title} | Home`}\r\n                    title={`${siteConfig.title} | Home`}\r\n                    className={cn(\r\n                        buttonVariants(),\r\n                        \"leading-none hyphens-none h-auto bg-transparent hover:bg-transparent font-cursive h2 p-0\",\r\n                    )}\r\n                >\r\n                    museo\r\n                </Link>\r\n\r\n                <nav className=\"flex items-center gap-2 w-full justify-end md:justify-between h-full\">\r\n                    <ThemeDropdown />\r\n\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <Link\r\n                            to=\"/trailer\"\r\n                            className={cn(\r\n                                buttonVariants({ colors: \"primary\" }),\r\n                                \"tracking-wider uppercase font-semibold\",\r\n                            )}\r\n                        >\r\n                            TRAILER\r\n                        </Link>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n", "import { cn } from \"@/lib/utils\";\r\nimport { VariantProps, cva } from \"class-variance-authority\";\r\nimport React from \"react\";\r\n\r\ninterface ButtonProps\r\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n        VariantProps<typeof buttonVariants> {}\r\n\r\nconst buttonVariants = cva(\r\n    \"transition-colors duration-200 inline-flex justify-center font-medium items-center focus-visible:ring-ring focus-visible:ring-2 focus-visible:ring-offset-background focus-visible:ring-offset-2 outline-transparent disabled:opacity-50\",\r\n    {\r\n        variants: {\r\n            size: {\r\n                default: \"text-sm h-9 px-4 py-2\",\r\n                sm: \"text-xs h-8 px-2 py-1\",\r\n                md: \"text-sm h-8 px-3 py-2\",\r\n                icon: \"w-8 h-8\",\r\n            },\r\n            rounded: {\r\n                default: \"rounded-md\",\r\n                sm: \"rounded-sm\",\r\n                lg: \"rounded-lg\",\r\n            },\r\n            colors: {\r\n                default: \"bg-transparent text-foreground\",\r\n                primary:\r\n                    \"bg-primary text-primary-foreground hover:bg-primary/80\",\r\n                secondary:\r\n                    \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n                accent: \"bg-accent text-accent-foreground hover:bg-accent/80\",\r\n                ghost: \"bg-transparent text-foreground hover:bg-accent/20\",\r\n                destructive:\r\n                    \"bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n            },\r\n        },\r\n        defaultVariants: {\r\n            size: \"default\",\r\n            rounded: \"default\",\r\n            colors: \"default\",\r\n        },\r\n    },\r\n);\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n    ({ className, type, size, rounded, colors, ...props }, ref) => {\r\n        return (\r\n            <button\r\n                type={type || \"button\"}\r\n                className={cn(\r\n                    buttonVariants({\r\n                        size,\r\n                        rounded,\r\n                        colors,\r\n                        className,\r\n                    }),\r\n                )}\r\n                ref={ref}\r\n                {...props}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport { Button, buttonVariants };\r\n", "import React from \"react\";\r\nimport { Dropdown, DropdownContent, DropdownLabel } from \"./ui/dropdown\";\r\nimport { useThemes } from \"@/hooks/useThemes\";\r\nimport themesIcon from \"@/assets/theme-icons.svg\";\r\nimport { useFetcher } from \"@remix-run/react\";\r\nimport { Button } from \"./ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst ThemeDropdown: React.FC = React.memo(() => {\r\n    const themes = useThemes();\r\n    const fetcher = useFetcher();\r\n\r\n    return (\r\n        <Dropdown id=\"theme-dropdown\" className=\"flex items-center\">\r\n            <DropdownLabel colors=\"ghost\" size=\"icon\">\r\n                <p className=\"sr-only\">\r\n                    Click to expand and choose a theme to set on the browser.\r\n                    The options are light, dark, and system settings.\r\n                </p>\r\n                <svg\r\n                    className={cn(\"w-6 h-6 inline\", {\r\n                        \"hidden dark:inline\": themes != \"dark\",\r\n                    })}\r\n                >\r\n                    <use href={themesIcon + \"#moon-solid\"}></use>\r\n                </svg>\r\n                <svg\r\n                    className={cn(\"w-6 h-6 inline\", {\r\n                        \"hidden dark:hidden\": themes != \"light\",\r\n                    })}\r\n                >\r\n                    <use href={themesIcon + \"#sun-solid\"}></use>\r\n                </svg>\r\n            </DropdownLabel>\r\n\r\n            <DropdownContent\r\n                offset={5}\r\n                position=\"right\"\r\n                className=\"w-40 z-20 md:left-0 bg-muted text-muted-foreground px-0 shadow-lg shadow-black/20\"\r\n            >\r\n                <div className=\"relative\">\r\n                    <fetcher.Form method=\"post\" action=\"/color-scheme\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            value=\"light\"\r\n                            name=\"colorScheme\"\r\n                            className={cn(\r\n                                \"gap-4 w-full h-auto justify-start py-1 px-3\",\r\n                                {\r\n                                    \"bg-secondary hover:bg-secondary/90 font-bold scale-95\":\r\n                                        themes == \"light\",\r\n                                },\r\n                            )}\r\n                            colors=\"ghost\"\r\n                            disabled={themes == \"light\"}\r\n                        >\r\n                            <svg\r\n                                className={cn(\"w-6 h-6\", {\r\n                                    \"stroke-2\": themes == \"light\",\r\n                                })}\r\n                            >\r\n                                <use href={themesIcon + \"#sun-solid\"}></use>\r\n                            </svg>\r\n                            Light\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            value=\"dark\"\r\n                            name=\"colorScheme\"\r\n                            className={cn(\r\n                                \"gap-4 w-full h-auto justify-start py-1 px-3\",\r\n                                {\r\n                                    \"bg-secondary hover:bg-secondary/90 font-bold scale-95\":\r\n                                        themes == \"dark\",\r\n                                },\r\n                            )}\r\n                            colors=\"ghost\"\r\n                            disabled={themes == \"dark\"}\r\n                        >\r\n                            <svg\r\n                                className={cn(\"w-6 h-6\", {\r\n                                    \"stroke-2\": themes == \"dark\",\r\n                                })}\r\n                            >\r\n                                <use href={themesIcon + \"#moon-solid\"}></use>\r\n                            </svg>\r\n                            Dark\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            value=\"system\"\r\n                            name=\"colorScheme\"\r\n                            className={cn(\r\n                                \"gap-4 w-full h-auto justify-start py-1 px-3\",\r\n                                {\r\n                                    \"bg-secondary hover:bg-secondary/90 font-bold scale-95\":\r\n                                        themes == \"system\",\r\n                                },\r\n                            )}\r\n                            colors=\"ghost\"\r\n                            disabled={themes == \"system\"}\r\n                        >\r\n                            <svg\r\n                                className={cn(\"w-6 h-6 stroke-background\", {\r\n                                    \"stroke-2\": themes == \"system\",\r\n                                })}\r\n                            >\r\n                                <use\r\n                                    href={themesIcon + \"#settings-solid\"}\r\n                                ></use>\r\n                            </svg>\r\n                            System\r\n                        </Button>\r\n                    </fetcher.Form>\r\n                </div>\r\n            </DropdownContent>\r\n        </Dropdown>\r\n    );\r\n});\r\n\r\nexport { ThemeDropdown };\r\n", "import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { VariantProps, cva } from \"class-variance-authority\";\r\nimport { cn, mergeRefs } from \"@/lib/utils\";\r\n\r\ninterface DropdownProps\r\n    extends React.DetailsHTMLAttributes<HTMLDetailsElement> {}\r\ninterface DropdownLabelProps\r\n    extends React.HTMLAttributes<HTMLElement>,\r\n        VariantProps<typeof summaryVariants> {}\r\ninterface DropdownContentProps\r\n    extends React.HTMLAttributes<HTMLDivElement>,\r\n        VariantProps<typeof contentVariants> {}\r\n\r\nconst summaryVariants = cva(\r\n    \"cursor-pointer transition-colors duration-200 inline-flex justify-center items-center focus-visible:ring-ring focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-background outline-transparent disabled:opacity-50 p-2\",\r\n    {\r\n        variants: {\r\n            rounded: {\r\n                default: \"rounded-full\",\r\n                sm: \"rounded-sm\",\r\n                lg: \"rounded-lg\",\r\n            },\r\n            colors: {\r\n                default: \"bg-muted text-muted-foreground hover:bg-muted/90\",\r\n                primary:\r\n                    \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n                secondary:\r\n                    \"bg-secondary text-secondary-foreground hover:bg-secondary/90\",\r\n                accent: \"bg-accent text-accent-foreground hover:bg-accent/90\",\r\n                ghost: \"bg-transparent text-foreground hover:bg-accent/20\",\r\n            },\r\n            size: {\r\n                default: \"h-9 w-max\",\r\n                icon: \"w-8 h-8\",\r\n            },\r\n        },\r\n        defaultVariants: {\r\n            rounded: \"default\",\r\n            colors: \"default\",\r\n            size: \"default\",\r\n        },\r\n    },\r\n);\r\n\r\nconst contentVariants = cva(\r\n    \"min-w-[5rem] absolute bg-inherit p-2 border w-max\",\r\n    {\r\n        variants: {\r\n            rounded: {\r\n                md: \"rounded-md\",\r\n                sm: \"rounded-sm\",\r\n                none: \"rounded-none\",\r\n                lg: \"rounded-lg\",\r\n            },\r\n            offset: {\r\n                default: \"top-[100%]\",\r\n                5: \"top-[105%]\",\r\n                10: \"top-[110%]\",\r\n                \"-5\": \"bottom-[105%]\",\r\n                \"-10\": \"bottom-[110%]\",\r\n            },\r\n            position: {\r\n                left: \"left-0\",\r\n                right: \"right-0\",\r\n                center: \"mx-auto left-0 right-0\",\r\n            },\r\n        },\r\n        defaultVariants: {\r\n            rounded: \"md\",\r\n            offset: \"default\",\r\n            position: \"left\",\r\n        },\r\n    },\r\n);\r\n\r\nconst Dropdown = React.forwardRef<HTMLDetailsElement, DropdownProps>(\r\n    ({ className, children, ...props }, ref) => {\r\n        const detailsRef = React.useRef<HTMLDetailsElement>(null);\r\n\r\n        const handleClose = React.useCallback((e: MouseEvent) => {\r\n            if (!detailsRef.current) {\r\n                return;\r\n            }\r\n\r\n            const target = e.target as Element;\r\n\r\n            for (const child of detailsRef.current.children) {\r\n                if (target == child) {\r\n                    return;\r\n                } else {\r\n                    for (const children of child.querySelectorAll(\"*\")) {\r\n                        if (target == children) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            detailsRef.current.removeAttribute(\"open\");\r\n        }, []);\r\n\r\n        React.useEffect(() => {\r\n            if (!detailsRef.current) {\r\n                return;\r\n            }\r\n\r\n            document.addEventListener(\"click\", handleClose);\r\n\r\n            return () => {\r\n                document.removeEventListener(\"click\", handleClose);\r\n            };\r\n        }, [handleClose]);\r\n\r\n        return (\r\n            <details\r\n                className={cn(\r\n                    \"marker:hidden disabled:opacity-50 disabled:cursor-default\",\r\n                    className,\r\n                    \"relative\",\r\n                )}\r\n                ref={mergeRefs(ref, detailsRef)}\r\n                {...props}\r\n            >\r\n                {children}\r\n            </details>\r\n        );\r\n    },\r\n);\r\n\r\nconst DropdownLabel = React.forwardRef<HTMLElement, DropdownLabelProps>(\r\n    ({ className, children, rounded, colors, ...props }, ref) => {\r\n        return (\r\n            <summary\r\n                className={cn(\r\n                    summaryVariants({\r\n                        rounded,\r\n                        colors,\r\n                        className,\r\n                    }),\r\n                )}\r\n                ref={ref}\r\n                {...props}\r\n            >\r\n                {children}\r\n            </summary>\r\n        );\r\n    },\r\n);\r\n\r\nconst DropdownContent = React.forwardRef<HTMLDivElement, DropdownContentProps>(\r\n    ({ className, children, position, rounded, offset, ...props }, ref) => {\r\n        return (\r\n            <div\r\n                className={cn(\r\n                    contentVariants({\r\n                        position,\r\n                        offset,\r\n                        rounded,\r\n                        className,\r\n                    }),\r\n                )}\r\n                ref={ref}\r\n                {...props}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    },\r\n);\r\n\r\nDropdown.propTypes = {\r\n    children: PropTypes.arrayOf((propValue, key, componentName) => {\r\n        return propValue[key].type != DropdownLabel &&\r\n            propValue[key].type != DropdownContent\r\n            ? new Error(\r\n                  `${componentName} only accepts children of types: [${DropdownLabel.name}, ${DropdownContent.name}]`,\r\n              )\r\n            : null;\r\n    }),\r\n};\r\n\r\nDropdown.displayName = \"Dropdown\";\r\nDropdownLabel.displayName = \"DropdownLabel\";\r\nDropdownContent.displayName = \"DropdownContent\";\r\n\r\nexport { Dropdown, DropdownLabel, DropdownContent };\r\n", "import React from \"react\";\r\n\r\ntype Themes = \"light\" | \"dark\" | \"system\" | null;\r\n\r\nexport const ThemeCtx = React.createContext<Themes>(null);\r\nexport function useThemes() {\r\n    return React.useContext(ThemeCtx);\r\n}\r\n", "import React from \"react\";\r\nimport { Themes } from \"./types\";\r\nimport { ThemeCtx } from \"./hooks/useThemes\";\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n    themes: Themes;\r\n}\r\n\r\nexport const ContextProvider: React.FC<Props> = ({ children, themes }) => {\r\n    return <ThemeCtx.Provider value={themes}>{children}</ThemeCtx.Provider>;\r\n};\r\n", "import { UserSettings } from \"@/types\";\r\nimport React from \"react\";\r\n\r\nexport function SettingsScript({\r\n    nonce,\r\n    userSettings,\r\n    ...props\r\n}: React.ScriptHTMLAttributes<HTMLScriptElement> & {\r\n    userSettings?: UserSettings;\r\n}) {\r\n    React.useEffect(() => {\r\n        if (document) {\r\n            document.documentElement.classList.remove(\"outline\", \"solid\");\r\n\r\n            if (\r\n                userSettings?.iconType == \"solid\" ||\r\n                userSettings?.iconType == \"outline\"\r\n            ) {\r\n                document.documentElement.classList.add(\r\n                    userSettings?.iconType || \"solid\",\r\n                );\r\n            } else {\r\n                document.documentElement.classList.add(\"solid\");\r\n            }\r\n        }\r\n    }, [userSettings?.iconType]);\r\n\r\n    return (\r\n        <script\r\n            dangerouslySetInnerHTML={{\r\n                __html: `\r\n            let preferredIcon = \"${userSettings?.iconType}\";\r\n\r\n            document.documentElement.classList.remove(\"outline\", \"solid\");\r\n\r\n            if (preferredIcon == \"solid\" || preferredIcon == \"outline\") {\r\n                document.documentElement.classList.add(\"${userSettings?.iconType}\");\r\n            } else {\r\n                document.documentElement.classList.add(\"solid\");\r\n            }\r\n        `,\r\n            }}\r\n            nonce={nonce}\r\n            {...props}\r\n        ></script>\r\n    );\r\n}\r\n", "import { escapeHTML } from \"@/lib/utils\";\r\nimport { Themes } from \"@/types\";\r\nimport React from \"react\";\r\n\r\nexport function ThemeScript({\r\n    nonce,\r\n    themes,\r\n    ...props\r\n}: React.ScriptHTMLAttributes<HTMLScriptElement> & { themes?: Themes }) {\r\n    React.useEffect(() => {\r\n        if (document) {\r\n            const colorScheme = themes;\r\n\r\n            if (colorScheme == \"system\" || !colorScheme) {\r\n                let mediaQuery = window.matchMedia(\r\n                    \"(prefers-color-scheme: dark)\",\r\n                );\r\n\r\n                document.documentElement.classList.remove(\"dark\", \"light\");\r\n\r\n                if (mediaQuery.matches) {\r\n                    document.documentElement.classList.add(\"dark\");\r\n                } else {\r\n                    document.documentElement.classList.add(\"light\");\r\n                }\r\n            } else if (colorScheme == \"dark\" || colorScheme == \"light\") {\r\n                document.documentElement.classList.remove(\"dark\", \"light\");\r\n                document.documentElement.classList.add(themes);\r\n            }\r\n        }\r\n    }, [themes]);\r\n\r\n    return (\r\n        <script\r\n            dangerouslySetInnerHTML={{\r\n                __html: `\r\n            let colorScheme = \"${themes ? escapeHTML(themes) : \"system\"}\";\r\n\r\n            document.documentElement.classList.remove(\"dark\", \"light\");\r\n\r\n            if (colorScheme == \"system\" || !colorScheme) {\r\n                let mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n                \r\n                if (mediaQuery.matches) {\r\n                    document.documentElement.classList.add(\"dark\");\r\n                }\r\n            } else {\r\n                document.documentElement.classList.add(colorScheme);\r\n            }\r\n        `,\r\n            }}\r\n            nonce={nonce}\r\n            {...props}\r\n        ></script>\r\n    );\r\n}\r\n", "export { action } from \"@/routes/_actions/color-scheme\";\r\n", "import type { ActionFunctionArgs } from \"@remix-run/node\";\r\nimport { themePrefs } from \"@/cookies.server\";\r\n\r\nexport async function action({ request }: ActionFunctionArgs) {\r\n    const formData = await request.formData();\r\n    const colorScheme = String(formData.get(\"colorScheme\"));\r\n    const cookies = request.headers.get(\"Cookie\");\r\n    const cookie = await themePrefs.parse(cookies);\r\n\r\n    return new Response(\"OK\", {\r\n        headers: {\r\n            \"Set-Cookie\": await themePrefs.serialize(colorScheme, {\r\n                expires: new Date(Date.now() + 60_000),\r\n            }),\r\n        },\r\n    });\r\n}\r\n", "import React from \"react\";\r\n\r\nimport { siteConfig } from \"@/config/site\";\r\nimport { generateMetadata } from \"@/lib/metadata\";\r\n\r\n// @ts-ignore\r\nimport themeIcons from \"@/assets/theme-icons.svg\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { MetaFunction, useLoaderData, useSearchParams } from \"@remix-run/react\";\r\nimport { loader } from \"../_loaders/root\";\r\nimport { ArtworkDetails } from \"./_components/artwork-details\";\r\n\r\nimport {\r\n    Dropdown,\r\n    DropdownContent,\r\n    DropdownLabel,\r\n} from \"@/components/ui/dropdown\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return generateMetadata({\r\n        title: {\r\n            isAbsolute: false,\r\n            text: \"| Slideshow\",\r\n        },\r\n        description: siteConfig.description,\r\n    });\r\n};\r\n\r\nconst DEFAULT_TIME = 10_000;\r\n\r\nexport default function Slideshow() {\r\n    const artworks = useLoaderData<typeof loader>();\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [timeLeftBeforeNextSlide, setTimeLeftBeforeNextSlide] =\r\n        React.useState(DEFAULT_TIME);\r\n    const [isPaused, setIsPaused] = React.useState(false);\r\n\r\n    const idxOfArtworkToBeShown = React.useMemo(() => {\r\n        return artworks.findIndex((artwork) => {\r\n            return (\r\n                artwork.title.toLowerCase().trim() ==\r\n                searchParams.get(\"artwork\")?.toLowerCase().trim()\r\n            );\r\n        });\r\n    }, [artworks, searchParams.get(\"artwork\")]);\r\n\r\n    const artworkToBeShown = artworks[idxOfArtworkToBeShown];\r\n    const detailsRef = React.useRef<HTMLDetailsElement>(null);\r\n\r\n    const handleNextArtwork = React.useCallback(() => {\r\n        setSearchParams((curr) => {\r\n            const newIdx = (idxOfArtworkToBeShown + 1) % artworks.length;\r\n\r\n            curr.set(\"artwork\", artworks[newIdx].title);\r\n\r\n            return curr;\r\n        });\r\n    }, [artworks, idxOfArtworkToBeShown]);\r\n\r\n    React.useEffect(() => {\r\n        if (idxOfArtworkToBeShown == -1) {\r\n            return;\r\n        }\r\n\r\n        let timer: NodeJS.Timeout | undefined;\r\n\r\n        timer = setTimeout(() => {\r\n            if (!isPaused) {\r\n                setTimeLeftBeforeNextSlide((curr) => {\r\n                    const diff = curr - 1000;\r\n\r\n                    return diff <= 0 ? DEFAULT_TIME : diff;\r\n                });\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n    }, [artworks, idxOfArtworkToBeShown, isPaused, timeLeftBeforeNextSlide]);\r\n\r\n    React.useEffect(() => {\r\n        if (timeLeftBeforeNextSlide <= 1000) {\r\n            handleNextArtwork();\r\n        }\r\n    }, [timeLeftBeforeNextSlide]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {artworkToBeShown && (\r\n                <div id=\"slideshow\" className=\"flex flex-col min-h-[80dvh]\">\r\n                    <ArtworkDetails\r\n                        artwork={artworkToBeShown}\r\n                        setIsPaused={setIsPaused}\r\n                    />\r\n\r\n                    <div className=\"z-50 fixed bottom-0 left-0 w-full bg-background\">\r\n                        <div\r\n                            className=\"w-full h-[0.175rem] relative bg-accent/20\"\r\n                            aria-label=\"Slideshow Progress\"\r\n                        >\r\n                            <span\r\n                                className=\"left-0 top-0 absolute h-full bg-accent transition-[width] will-change-[width] duration-500\"\r\n                                style={{\r\n                                    width: `${\r\n                                        ((idxOfArtworkToBeShown + 1) /\r\n                                            artworks.length) *\r\n                                        100\r\n                                    }%`,\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"flex justify-between items-center gap-4 flex-wrap px-4 py-2\">\r\n                            <Dropdown\r\n                                ref={detailsRef}\r\n                                className=\"flex items-center\"\r\n                            >\r\n                                <DropdownLabel\r\n                                    className=\"h-auto flex-col px-4 py-2 items-start\"\r\n                                    rounded=\"sm\"\r\n                                    colors=\"ghost\"\r\n                                >\r\n                                    <strong className=\"h5 font-semibold\">\r\n                                        {artworkToBeShown.title}\r\n                                    </strong>\r\n                                    <small>{artworkToBeShown.artist}</small>\r\n                                </DropdownLabel>\r\n\r\n                                <DropdownContent\r\n                                    position=\"center\"\r\n                                    offset=\"-10\"\r\n                                    className=\"flex-col bg-muted text-muted-foreground flex gap-2 max-h-[20rem] overflow-y-auto\"\r\n                                >\r\n                                    {artworks.map((artwork) => (\r\n                                        <Button\r\n                                            key={artwork.title}\r\n                                            onClick={() => {\r\n                                                setSearchParams((curr) => {\r\n                                                    curr.set(\r\n                                                        \"artwork\",\r\n                                                        artwork.title,\r\n                                                    );\r\n\r\n                                                    return curr;\r\n                                                });\r\n\r\n                                                detailsRef.current?.removeAttribute(\r\n                                                    \"open\",\r\n                                                );\r\n                                            }}\r\n                                            title={`View ${artwork.title}`}\r\n                                            aria-label={`View ${artwork.title}`}\r\n                                            colors=\"ghost\"\r\n                                            className={cn(\r\n                                                \"flex-col py-2 px-4 h-auto\",\r\n                                                {\r\n                                                    \"bg-accent/20 scale-95\":\r\n                                                        artwork.title ==\r\n                                                        artworkToBeShown.title,\r\n                                                },\r\n                                            )}\r\n                                        >\r\n                                            <strong className=\"h5 semibold\">\r\n                                                {artwork.title}\r\n                                            </strong>\r\n                                            <small>{artwork.artist}</small>\r\n                                        </Button>\r\n                                    ))}\r\n                                </DropdownContent>\r\n                            </Dropdown>\r\n\r\n                            <div className=\"flex items-center\">\r\n                                <Button\r\n                                    aria-label=\"Go to previous artwork\"\r\n                                    size=\"icon\"\r\n                                    colors=\"ghost\"\r\n                                    className=\"p-0\"\r\n                                    onClick={() => {\r\n                                        setSearchParams((curr) => {\r\n                                            const newIdx =\r\n                                                idxOfArtworkToBeShown == 0\r\n                                                    ? artworks.length - 1\r\n                                                    : idxOfArtworkToBeShown - 1;\r\n\r\n                                            curr.set(\r\n                                                \"artwork\",\r\n                                                artworks[newIdx].title,\r\n                                            );\r\n\r\n                                            return curr;\r\n                                        });\r\n                                        setTimeLeftBeforeNextSlide(\r\n                                            DEFAULT_TIME,\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    <svg>\r\n                                        <use\r\n                                            href={themeIcons + \"#chevron-left\"}\r\n                                        ></use>\r\n                                    </svg>\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    aria-label=\"Pause/Play slideshow\"\r\n                                    size=\"icon\"\r\n                                    colors=\"ghost\"\r\n                                    className=\"p-0\"\r\n                                    onClick={() => {\r\n                                        setIsPaused((p) => {\r\n                                            return !p;\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {!isPaused && (\r\n                                        <svg>\r\n                                            <use\r\n                                                href={\r\n                                                    themeIcons + \"#pause-solid\"\r\n                                                }\r\n                                            ></use>\r\n                                        </svg>\r\n                                    )}\r\n\r\n                                    {isPaused && (\r\n                                        <svg>\r\n                                            <use\r\n                                                href={\r\n                                                    themeIcons + \"#play-solid\"\r\n                                                }\r\n                                            ></use>\r\n                                        </svg>\r\n                                    )}\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    aria-label=\"Go to next artwork\"\r\n                                    size=\"icon\"\r\n                                    colors=\"ghost\"\r\n                                    className=\"p-0\"\r\n                                    onClick={() => {\r\n                                        handleNextArtwork();\r\n                                        setTimeLeftBeforeNextSlide(\r\n                                            DEFAULT_TIME,\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    <svg>\r\n                                        <use\r\n                                            href={themeIcons + \"#chevron-right\"}\r\n                                        ></use>\r\n                                    </svg>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {!artworkToBeShown && (\r\n                <div className=\"min-h-[50dvh] grid place-items-center\">\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <p>There is no artwork with that title.</p>\r\n\r\n                        <Button\r\n                            colors=\"secondary\"\r\n                            onClick={() => {\r\n                                setSearchParams((curr) => {\r\n                                    curr.set(\"artwork\", artworks[0].title);\r\n\r\n                                    return curr;\r\n                                });\r\n                            }}\r\n                        >\r\n                            Start at the beginning?\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { loader };\r\n", "import { siteConfig } from \"@/config/site\";\r\n\r\ntype Title =\r\n    | string\r\n    | {\r\n          isAbsolute: boolean;\r\n          text: string;\r\n      };\r\n\r\ninterface Metadata {\r\n    title: Title;\r\n    description: string;\r\n}\r\n\r\nexport function generateMetadata({ title, description }: Metadata) {\r\n    let siteTitle: string;\r\n\r\n    if (typeof title == \"string\") {\r\n        siteTitle = title;\r\n    } else {\r\n        siteTitle = title.isAbsolute\r\n            ? title.text\r\n            : `${siteConfig.title} ${title.text}`;\r\n    }\r\n\r\n    return [{ title: siteTitle }, { description }];\r\n}\r\n", "import type { Artwork } from \"@/types\";\r\nimport type { LoaderFunctionArgs } from \"@remix-run/node\";\r\n\r\nexport async function loader({ request }: LoaderFunctionArgs) {\r\n    const artworks = await fetch(\r\n        new URL(request.url).origin + \"/assets/art.json\",\r\n        {\r\n            method: \"GET\",\r\n            mode: \"same-origin\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        },\r\n    );\r\n\r\n    return artworks.json() as Promise<Artwork[]>;\r\n}\r\n", "import { Button } from \"@/components/ui/button\";\r\nimport type { Artwork } from \"@/types\";\r\nimport React from \"react\";\r\n\r\nimport themeIcons from \"@/assets/theme-icons.svg\";\r\n\r\nexport const ArtworkDetails: React.FC<{\r\n    artwork: Artwork;\r\n    setIsPaused: React.Dispatch<React.SetStateAction<boolean>>;\r\n}> = ({\r\n    artwork: { title, category, description, artist, techniques, materials },\r\n    setIsPaused,\r\n}) => {\r\n    const [didAvifFail, setDidAvifFail] = React.useState(false);\r\n    const [didWebpFail, setDidWebpFail] = React.useState(false);\r\n    const srcSets = React.useMemo(() => {\r\n        if (didAvifFail) {\r\n            return !didWebpFail\r\n                ? ` /assets/${category}/250/${title.toLowerCase()}.webp 250w,\r\n                            /assets/${category}/500/${title.toLowerCase()}.webp 500w,\r\n                            /assets/${category}/1000/${title.toLowerCase()}.webp 1000w,\r\n                            /assets/${category}/1500/${title.toLowerCase()}.webp 1500w,\r\n                            /assets/${category}/2000/${title.toLowerCase()}.webp 2000w`\r\n                : `/assets/${category}/250/${title.toLowerCase()}.jpg 250w,\r\n                            /assets/${category}/500/${title.toLowerCase()}.jpg 500w,\r\n                            /assets/${category}/1000/${title.toLowerCase()}.jpg 1000w,\r\n                            /assets/${category}/1500/${title.toLowerCase()}.jpg 1500w,\r\n                            /assets/${category}/2000/${title.toLowerCase()}.jpg 2000w`;\r\n        } else {\r\n            return `/assets/${category}/250/${title.toLowerCase()}.avif 250w,\r\n                        /assets/${category}/500/${title.toLowerCase()}.avif 500w,\r\n                        /assets/${category}/1000/${title.toLowerCase()}.avif 1000w,\r\n                        /assets/${category}/1500/${title.toLowerCase()}.avif 1500w,\r\n                        /assets/${category}/2000/${title.toLowerCase()}.avif 2000w`;\r\n        }\r\n    }, [didAvifFail, didWebpFail, title, category]);\r\n\r\n    const dialogRef = React.useRef<HTMLDialogElement>(null);\r\n\r\n    const handleClose = React.useCallback(\r\n        (e: MouseEvent) => {\r\n            if (e.target == dialogRef.current) {\r\n                dialogRef.current!.close();\r\n                setIsPaused(false);\r\n            }\r\n        },\r\n        [setIsPaused],\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (!dialogRef.current) {\r\n            return;\r\n        }\r\n\r\n        dialogRef.current.addEventListener(\"click\", handleClose);\r\n\r\n        return () => {\r\n            dialogRef.current?.removeEventListener(\"click\", handleClose);\r\n        };\r\n    }, [handleClose]);\r\n\r\n    const splitDesc = description.split(\".\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <dialog className=\"bg-transparent\" ref={dialogRef}>\r\n                <div className=\"flex flex-col gap-2 bg-transparent\">\r\n                    <div className=\"flex justify-end px-1 pt-2\">\r\n                        <Button\r\n                            colors=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"font-semibold gap-2\"\r\n                            onClick={() => {\r\n                                setIsPaused(false);\r\n\r\n                                dialogRef.current!.close();\r\n                            }}\r\n                        >\r\n                            <svg className=\"own-width w-4 h-4\">\r\n                                <use href={themeIcons + \"#x-icon-small\"}></use>\r\n                            </svg>\r\n                            CLOSE\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <img\r\n                        srcSet={srcSets}\r\n                        onError={() => {\r\n                            if (!didAvifFail) {\r\n                                setDidAvifFail(true);\r\n                            }\r\n\r\n                            if (didAvifFail && !didWebpFail) {\r\n                                setDidWebpFail(true);\r\n                            }\r\n                        }}\r\n                        alt={description}\r\n                        className=\"w-full max-w-full h-fit max-h-[42.5rem]\"\r\n                        src={`/assets/${category}/10/${title.toLowerCase()}.jpg`}\r\n                        sizes=\"(min-width: 520px) 500px, (min-width: 768px) 1000px, (min-width: 1280px) 1500px, (min-width: 2000px) 2000px, 250px\"\r\n                    />\r\n                </div>\r\n            </dialog>\r\n\r\n            <article className=\"justify-center container flex-1 flex flex-col gap-12 xl:gap-24 md:flex-row pb-24 animate-fade duration-500\">\r\n                <div className=\"w-fit h-fit flex items-start relative\">\r\n                    <img\r\n                        srcSet={srcSets}\r\n                        onError={() => {\r\n                            if (!didAvifFail) {\r\n                                setDidAvifFail(true);\r\n                            }\r\n\r\n                            if (didAvifFail && !didWebpFail) {\r\n                                setDidWebpFail(true);\r\n                            }\r\n                        }}\r\n                        alt={description}\r\n                        className=\"w-full max-w-full h-fit max-h-[42.5rem]\"\r\n                        sizes=\"(min-width: 520px) 500px, (min-width: 768px) 1000px, (min-width: 1280px) 1500px, (min-width: 2000px) 2000px, 250px\"\r\n                        loading=\"eager\"\r\n                    />\r\n\r\n                    <Button\r\n                        colors=\"secondary\"\r\n                        size=\"sm\"\r\n                        className=\"absolute bottom-1 left-1 font-semibold gap-2\"\r\n                        onClick={() => {\r\n                            setIsPaused(true);\r\n\r\n                            dialogRef.current!.showModal();\r\n                        }}\r\n                    >\r\n                        <svg className=\"own-width w-4 h-4\">\r\n                            <use href={themeIcons + \"#expand-small\"}></use>\r\n                        </svg>\r\n                        Expand image\r\n                    </Button>\r\n                </div>\r\n                <div className=\"flex flex-col gap-4 xl:gap-8 items-center md:w-[45%] xl:w-[35%]\">\r\n                    <div className=\"w-full\">\r\n                        <h1>\r\n                            <strong className=\"font-semibold\">{title}</strong>\r\n                        </h1>\r\n                        <div>{artist}</div>\r\n                    </div>\r\n\r\n                    <p className=\"text-justify\">\r\n                        {splitDesc.map((text, idx) => {\r\n                            if (idx != splitDesc.length - 1) {\r\n                                return (\r\n                                    <React.Fragment key={idx}>\r\n                                        {text}.\r\n                                        {idx > 0 && idx % 3 == 0 ? (\r\n                                            <React.Fragment>\r\n                                                <br />\r\n                                                <br />\r\n                                            </React.Fragment>\r\n                                        ) : undefined}\r\n                                    </React.Fragment>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </p>\r\n\r\n                    <hr className=\"bg-foreground w-full\" />\r\n\r\n                    <section className=\"flex flex-col gap-2 xl:gap-4 w-full\">\r\n                        <h2 className=\"sr-only\">Metadata about the artwork</h2>\r\n                        <div className=\"flex flex-col gap-2 w-full\">\r\n                            <div className=\"h5\">Category</div>\r\n                            <small>{category[0].toUpperCase() + category.slice(1)}</small>\r\n                        </div>\r\n\r\n                        {techniques && (\r\n                            <div className=\"w-full flex gap-2 flex-col\">\r\n                                <div className=\"h6 font-medium\">\r\n                                    Techinques used\r\n                                </div>\r\n                                <ul className=\"flex items-center flex-wrap gap-4\">\r\n                                    {techniques.map((technique) => (\r\n                                        <li key={technique + title}>\r\n                                            <small>{technique}</small>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n\r\n                        {materials && (\r\n                            <div className=\"w-full flex gap-2 flex-col\">\r\n                                <div className=\"h6 font-medium\">\r\n                                    Materials used\r\n                                </div>\r\n                                <ul className=\"flex items-center flex-wrap gap-4\">\r\n                                    {materials.map((material) => (\r\n                                        <li key={material + title}>\r\n                                            <small>{material}</small>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                </div>\r\n            </article>\r\n        </React.Fragment>\r\n    );\r\n};\r\n", "import React from \"react\";\r\nimport { Video } from \"./_components/video.client\";\r\nimport { MetaFunction } from \"@remix-run/react\";\r\nimport { generateMetadata } from \"@/lib/metadata\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return generateMetadata({\r\n        title: {\r\n            isAbsolute: false,\r\n            text: \"| Trailer\",\r\n        },\r\n        description: \"A trailer for the art exhibit.\",\r\n    });\r\n};\r\n\r\nlet isHydrating = true;\r\n\r\nexport default function Trailer() {\r\n    const [isHydrated, setIsHydrated] = React.useState(!isHydrating);\r\n\r\n    React.useEffect(() => {\r\n        isHydrating = false;\r\n        setIsHydrated(true);\r\n    }, []);\r\n\r\n    return <React.Fragment>{isHydrated && <Video />}</React.Fragment>;\r\n}\r\n", "import type { MetaFunction } from \"@remix-run/node\";\r\nimport React from \"react\";\r\n\r\nimport { siteConfig } from \"@/config/site\";\r\nimport { generateMetadata } from \"@/lib/metadata\";\r\n\r\nimport { loader } from \"../_loaders/root\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\n\r\nimport SectionOfArtworks from \"./_components/section-of-artworks.client\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n    return generateMetadata({\r\n        title: siteConfig.title,\r\n        description: \"A slideshow of all the artworks.\",\r\n    });\r\n};\r\n\r\nlet isHydrating = true;\r\n\r\nexport default function Index() {\r\n    const artworks = useLoaderData<typeof loader>();\r\n    const [isHydrated, setIsHydrated] = React.useState(!isHydrating);\r\n\r\n    React.useEffect(() => {\r\n        isHydrating = false;\r\n        setIsHydrated(true);\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isHydrated && <SectionOfArtworks artworks={artworks} />}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { loader };\r\n", "export default {'entry':{'module':'/build/entry.client-5CA2H5JY.js','imports':['/build/_shared/chunk-BA6NHEY4.js','/build/_shared/chunk-H5ZE7JVG.js','/build/_shared/chunk-5473JFYK.js','/build/_shared/chunk-KYUQ2GT7.js','/build/_shared/chunk-NRH5LTJ7.js','/build/_shared/chunk-O4OKU2LD.js','/build/_shared/chunk-K6PKGSTD.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-NLTMKGWO.js','imports':['/build/_shared/chunk-4VSDZB3N.js','/build/_shared/chunk-ERJPABV2.js','/build/_shared/chunk-XVQ66UTV.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-3VBU26RP.js','imports':['/build/_shared/chunk-CGFMPS4Z.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/color-scheme':{'id':'routes/color-scheme','parentId':'root','path':'color-scheme','index':undefined,'caseSensitive':undefined,'module':'/build/routes/color-scheme-75KTWUBL.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false},'routes/slideshow':{'id':'routes/slideshow','parentId':'root','path':'slideshow','index':undefined,'caseSensitive':undefined,'module':'/build/routes/slideshow-43HWDM5X.js','imports':['/build/_shared/chunk-CGFMPS4Z.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/trailer':{'id':'routes/trailer','parentId':'root','path':'trailer','index':undefined,'caseSensitive':undefined,'module':'/build/routes/trailer-BZDU6HCX.js','imports':['/build/_shared/chunk-CGFMPS4Z.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false}},'version':'60b71628','hmr':{'runtime':'/build/_shared\\\\chunk-KYUQ2GT7.js','timestamp':1712944505709},'url':'/build/manifest-60B71628.js'};", "\nimport * as entryServer from \"C:\\\\Personal\\\\projects\\\\PhilippineArts-Exhibit\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/color-scheme/route.ts\";\nimport * as route2 from \"./routes/slideshow/route.tsx\";\nimport * as route3 from \"./routes/trailer/route.tsx\";\nimport * as route4 from \"./routes/_index/route.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/color-scheme\": {\n      id: \"routes/color-scheme\",\n      parentId: \"root\",\n      path: \"color-scheme\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/slideshow\": {\n      id: \"routes/slideshow\",\n      parentId: \"root\",\n      path: \"slideshow\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/trailer\": {\n      id: \"routes/trailer\",\n      parentId: \"root\",\n      path: \"trailer\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": ["module", "module", "isbot", "import_react", "import_react", "import_react", "React", "import_jsx_dev_runtime", "import_node", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "React", "import_react", "import_react", "import_class_variance_authority", "import_jsx_dev_runtime", "React", "children", "PropTypes", "import_react", "React", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "userSettings", "React", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "userSettings", "route_exports", "loader", "import_react", "import_react", "loader", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "React", "route_exports", "meta", "import_react", "import_jsx_dev_runtime", "meta", "React", "route_exports", "loader", "meta", "import_react", "import_react", "import_jsx_dev_runtime", "meta", "isHydrating", "React", "SectionOfArtworks", "route_exports"]
}
